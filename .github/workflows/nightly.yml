name: nightly

on:
  schedule:
    - cron: "0 7 * * *"

env:
  UPLOAD_BUILD: false

jobs:
  QIO:
    strategy:
      fail-fast: false
      matrix:
        example:
          - "bg96_client_http"
          - "bg96_dss_dns"
          - "bg96_gps"
          - "bg96_i2c_Si7021"
          - "BC66_A1_HELLO"
          - "BC66_A2_CLIENT_TCP"
          - "BC66_A3_CLENT_HTTP"
          - "BC66_A4_MQTT"
          - "BC66_A5_PSM"
          - "BC66_A6_MQTT_SECURE"
          - "BC66_A9_SI7021"
          - "BC66_A11_DS1820_DHT_GPIO"
          - "BC66_A12_Ultrasonic_HCSR04_SPI"
          - "BC66_CPP_HELLO"

        os: [ubuntu-latest, windows-latest, macos-latest]
        package:
          - "release"
          - "latest"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install release
        if: matrix.package == 'release'
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/M03/releases/latest/download/qio.zip
          pio platform install https://github.com/OS-Q/P67/releases/latest/download/package.zip

      - name: Install latest
        if: matrix.package == 'latest'
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/M03/archive/master.zip
          qio platform install file://.

      - name: Build
        id: build
        if: success()
        working-directory: examples
        run: |
          pio run -d ${{ matrix.example }}
          echo "::set-output name=status::success"

      - name: Upload
        if: env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: qio_${{ matrix.example }}_${{ matrix.os }}
          path: examples/${{ matrix.example }}/.pio/build

  QIO_fail:
    needs:
      - QIO
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "QIO build fail"

  QIO_pass:
    needs:
      - QIO
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "QIO build success"

  PIO:
    strategy:
      fail-fast: false
      matrix:
        example:
          - "bg96_client_http"
          - "bg96_dss_dns"
          - "bg96_gps"
          - "bg96_i2c_Si7021"
          - "BC66_A1_HELLO"
          - "BC66_A2_CLIENT_TCP"
          - "BC66_A3_CLENT_HTTP"
          - "BC66_A4_MQTT"
          - "BC66_A5_PSM"
          - "BC66_A6_MQTT_SECURE"
          - "BC66_A9_SI7021"
          - "BC66_A11_DS1820_DHT_GPIO"
          - "BC66_A12_Ultrasonic_HCSR04_SPI"
          - "BC66_CPP_HELLO"

        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/platformio/platformio/archive/develop.zip
          pio platform install file://.

      - name: Build
        id: build
        if: success()
        working-directory: examples
        run: |
          pio run -d ${{ matrix.example }}
          echo "::set-output name=status::success"

      - name: Upload
        if: env.UPLOAD_BUILD
        uses: actions/upload-artifact@v2
        with:
          name: pio_${{ matrix.example }}_${{ matrix.os }}
          path: examples/${{ matrix.example }}/.pio/build

  PIO_fail:
    needs:
      - PIO
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "PIO build fail"

  PIO_pass:
    needs:
      - PIO
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "PIO build success"

